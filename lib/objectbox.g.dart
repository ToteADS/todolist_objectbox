// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'app/modules/home/domain/entities/email.dart';
import 'app/modules/home/domain/entities/pessoa.dart';
import 'app/modules/home/domain/entities/telefone.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(14, 2228238669287413702),
      name: 'Email',
      lastPropertyId: const IdUid(2, 128941147819862255),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 5232495455540257169),
            name: 'id',
            type: 6,
            flags: 129),
        ModelProperty(
            id: const IdUid(2, 128941147819862255),
            name: 'email',
            type: 9,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[]),
  ModelEntity(
      id: const IdUid(24, 171639073890648400),
      name: 'Pessoa',
      lastPropertyId: const IdUid(6, 8207356316813024499),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 8765652485644800465),
            name: 'id',
            type: 6,
            flags: 1),
        ModelProperty(
            id: const IdUid(2, 939769277341517238),
            name: 'nome',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(3, 5543368586266161133),
            name: 'apelido',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 91689283913750308),
            name: 'idade',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 2844919497332708634),
            name: 'telefoneId',
            type: 11,
            flags: 520,
            indexId: const IdUid(4, 925614374498928962),
            relationTarget: 'Telefone'),
        ModelProperty(
            id: const IdUid(6, 8207356316813024499),
            name: 'emailsId',
            type: 11,
            flags: 520,
            indexId: const IdUid(5, 8504100185345169741),
            relationTarget: 'Email')
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[]),
  ModelEntity(
      id: const IdUid(25, 2788453867058901225),
      name: 'Telefone',
      lastPropertyId: const IdUid(3, 202446602600725075),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 4067499460099104688),
            name: 'id',
            type: 6,
            flags: 129),
        ModelProperty(
            id: const IdUid(3, 202446602600725075),
            name: 'numero',
            type: 9,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Open an ObjectBox store with the model declared in this file.
Future<Store> openStore(
        {String? directory,
        int? maxDBSizeInKB,
        int? fileMode,
        int? maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String? macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// ObjectBox model definition, pass it to [Store] - Store(getObjectBoxModel())
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(25, 2788453867058901225),
      lastIndexId: const IdUid(5, 8504100185345169741),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [
        9126619153900734383,
        5700438337791937855,
        1863450142412412863,
        892350604836863424,
        2387021944947956567,
        2181332671731023022,
        3999265133559879536,
        8060278971945014665,
        1274270318840949456,
        8626519984859349780,
        8506854036873194751,
        8933057492975481645,
        7854251120853732049,
        8054882898637153195,
        6871732311159026719,
        3788441227030127870,
        4725338863492279692,
        1695247173688789617,
        316784047313044388,
        1591180383203927657,
        2360866743019855504,
        589902587726858110
      ],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        8474797458728432268,
        4784771352775059152,
        8585141247508902575,
        5079019149118349338,
        105260150668972693,
        593979300725171321,
        327284089957882496,
        4052996305105435441,
        8841648723139281737,
        2122667106592740267,
        2450668273117428393,
        867536632132922114,
        5578186859497806916,
        7441871476139694780,
        959419838273694430,
        4310954957416205593,
        8305877718468440103,
        763962061864250094,
        6151213358665889327,
        2150595663636359879,
        4094043016582584503,
        8356081536496877283,
        1728810395623734384,
        8257100236472897454,
        7798946441707463786,
        5833538088405833467,
        2076313165661718068,
        1129900818285318976,
        4065452946201336770,
        5560224751814232854,
        2052529099663119024,
        8499087566853976197,
        6033081302063366611,
        8386834196567324517,
        7504042906850597406,
        5233890885911217574,
        2372353962191668465,
        4222334355877177886,
        5113263302535051316,
        4390914283055160056,
        1722793104906722147,
        3550298019129725,
        7144180273296374306,
        187265313702699160,
        7381904002129697805,
        27606950008286117,
        284109709668078521,
        6059114893156619603,
        209623188050483127,
        6654536761480396076,
        7443578183723879229,
        231410402712200234,
        2296002682290235223,
        2627639942029265143,
        2288951807671201221,
        6023498233739028611,
        1996945968208455906,
        3562107576706951376,
        7951141808922423693,
        5612928177497511801,
        370398982155408571,
        1694969933468112195,
        5000131163610643955,
        3089030593055247774,
        1175464916437517612,
        5314130594369178396,
        63892009900839407,
        2399172528935385666,
        377618221069456145,
        8867386558781334304,
        5806681370611417864,
        6969225532828583755,
        6004067213895750901,
        7944183481426701187,
        6448532149283109849,
        3999222639527727764,
        7422275500372619376,
        2886685646788679354,
        6281235656646274816,
        8619459913623568120,
        1648727474654346948,
        8336903366103362944,
        884217225519510980,
        1779516269660929520,
        7608055205288473683,
        4664612887830865247,
        4378314058096984038,
        659106833903714968,
        6073721460977292631,
        4317250416848383626
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    Email: EntityDefinition<Email>(
        model: _entities[0],
        toOneRelations: (Email object) => [],
        toManyRelations: (Email object) => {},
        getId: (Email object) => object.id,
        setId: (Email object, int id) {
          object.id = id;
        },
        objectToFB: (Email object, fb.Builder fbb) {
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, emailOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Email()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..email = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 6);

          return object;
        }),
    Pessoa: EntityDefinition<Pessoa>(
        model: _entities[1],
        toOneRelations: (Pessoa object) => [object.telefone, object.emails],
        toManyRelations: (Pessoa object) => {},
        getId: (Pessoa object) => object.id,
        setId: (Pessoa object, int id) {
          object.id = id;
        },
        objectToFB: (Pessoa object, fb.Builder fbb) {
          final nomeOffset =
              object.nome == null ? null : fbb.writeString(object.nome!);
          final apelidoOffset =
              object.apelido == null ? null : fbb.writeString(object.apelido!);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nomeOffset);
          fbb.addOffset(2, apelidoOffset);
          fbb.addInt64(3, object.idade);
          fbb.addInt64(4, object.telefone.targetId);
          fbb.addInt64(5, object.emails.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Pessoa()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..nome = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 6)
            ..apelido = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 8)
            ..idade = const fb.Int64Reader()
                .vTableGetNullable(buffer, rootOffset, 10);
          object.telefone.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          object.telefone.attach(store);
          object.emails.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          object.emails.attach(store);
          return object;
        }),
    Telefone: EntityDefinition<Telefone>(
        model: _entities[2],
        toOneRelations: (Telefone object) => [],
        toManyRelations: (Telefone object) => {},
        getId: (Telefone object) => object.id,
        setId: (Telefone object, int id) {
          object.id = id;
        },
        objectToFB: (Telefone object, fb.Builder fbb) {
          final numeroOffset =
              object.numero == null ? null : fbb.writeString(object.numero!);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(2, numeroOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Telefone()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..numero = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 8);

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [Email] entity fields to define ObjectBox queries.
class Email_ {
  /// see [Email.id]
  static final id = QueryIntegerProperty<Email>(_entities[0].properties[0]);

  /// see [Email.email]
  static final email = QueryStringProperty<Email>(_entities[0].properties[1]);
}

/// [Pessoa] entity fields to define ObjectBox queries.
class Pessoa_ {
  /// see [Pessoa.id]
  static final id = QueryIntegerProperty<Pessoa>(_entities[1].properties[0]);

  /// see [Pessoa.nome]
  static final nome = QueryStringProperty<Pessoa>(_entities[1].properties[1]);

  /// see [Pessoa.apelido]
  static final apelido =
      QueryStringProperty<Pessoa>(_entities[1].properties[2]);

  /// see [Pessoa.idade]
  static final idade = QueryIntegerProperty<Pessoa>(_entities[1].properties[3]);

  /// see [Pessoa.telefone]
  static final telefone =
      QueryRelationToOne<Pessoa, Telefone>(_entities[1].properties[4]);

  /// see [Pessoa.emails]
  static final emails =
      QueryRelationToOne<Pessoa, Email>(_entities[1].properties[5]);
}

/// [Telefone] entity fields to define ObjectBox queries.
class Telefone_ {
  /// see [Telefone.id]
  static final id = QueryIntegerProperty<Telefone>(_entities[2].properties[0]);

  /// see [Telefone.numero]
  static final numero =
      QueryStringProperty<Telefone>(_entities[2].properties[1]);
}
